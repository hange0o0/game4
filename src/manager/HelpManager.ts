class HelpManager {
    private static _instance:HelpManager;

    public static getInstance():HelpManager {
        if (!this._instance)
            this._instance = new HelpManager();
        return this._instance;
    }

    private helpObj = {};
    private infoList = [];
    public constructor() {

        //this.helpObj['pos'] = {
        //    title:'阵容配置',
        //    list:[
        //        '[改变位置：]玩家可拖动卡牌进行位置调整',
        //        '[移除卡牌：]点击卡牌可使其从该阵容中移除',
        //        '[增加卡牌：]当阵容未达上限时，点击列表中最后一个[+]的位置，可打开[选择卡牌]列表，增加的卡牌会自动放入队列的未端',
        //        '[查看卡牌：]长按卡牌可弹出卡牌详情',
        //        '阵容中的卡牌上限取决于玩家的['+TecVO.getObject(4).name+']科技等级，等级越高，阵容中可容纳的卡牌数量越多',
        //        '玩家可使用[测试]功能对当前卡组进行测试，测试的另一方从自己的进攻/防守阵容中选取',
        //    ]
        //}
        //
        //this.helpObj['atkPos'] = {
        //    title:'进攻阵容',
        //    list:[
        //        '每个玩家最多可配置[5个]进攻阵容',
        //        '在每次出战前，玩家可挑选其中一个进行使用，也可跟据需要对其进行实时调整',
        //        '在对战中，玩家手牌数量固定为['+PKConfig.maxHandCard+']张，当手牌数量不足时，会随机从[阵容牌库]中抽取卡牌进行补充。当[阵容牌库]的卡牌被抽光时，将不会有新的卡牌加入手牌',
        //        '阵容中排序[越前]的卡牌在对战时有[越大的机率]在早期被抽到',
        //        '玩家可通过调整阵容，一定程度上控制卡牌到手顺序',
        //    ].concat(this.helpObj['pos'].list)
        //}
        //this.helpObj['defPos'] = {
        //    title:'防守阵容',
        //    list:[
        //        '每个玩家最多可拥有[5个]防守阵容',
        //        '玩家可设置防守阵容是否被使用，当设置为[停用]时，系统将[不会]使用其进行防守',
        //        '当玩家被攻击时，系统会自动从[有效的]防守阵容中随机抽取一个进行迎战',
        //        '当防守阵容被动出战时，系统会按照玩家配置的顺序使用阵容中卡牌，使用时机取决于当时[能量]是否足够。一但[能量]满足，则会马上被使用',
        //        '玩家必须最少保有一个开启中的防守阵容',
        //        '当玩家使用自动挑战模式时，使用的是防守阵容，并由系统[按顺序]出牌',
        //        //'防守阵容中无法使用[法术]卡',
        //        '防守阵容中的队伍出战时，防御力得到[10%]的加成',
        //    ].concat(this.helpObj['pos'].list)
        //}
        //
        //
        //
        //this.helpObj['posChoose'] = {
        //    title:'选择卡牌',
        //    list:[
        //        '玩家可从已解锁卡牌的选择任意卡牌加到阵容中',
        //        '每张卡牌最多可使用3次',
        //        '[法术]卡牌可通过兑换或购买获得，仅玩家当集满数量为[' + CardManager.getInstance().maxSkill + ']的卡牌后，即可[永久保有]该卡牌',
        //        '如果[法术]卡牌没有集满指定数量，玩家也可以将其放入手牌，但战斗时会[产生损耗]',
        //        '出战后如果战斗取得[胜利]，会返还未使用过的[法术]卡牌；但如果战斗[失败]，则会[移除]本轮出战的[所有]法术卡牌',
        //    ]
        //}
        //
        //this.helpObj['slave'] = {
        //    title:'奴隶系统',
        //    list:[
        //        '玩家可击败其它玩家使其成为你的奴隶，也可被其它玩家击败成为其奴隶',
        //        '点击奴隶列表中的[+]，可打开系统推荐列表，玩家可挑战列表中的玩家进行收服',
        //        '收服奴隶后，该奴隶获得[2小时]的镇压时间，其不能反抗或被抢夺',
        //        '当玩家被其它玩家收服后，可在镇压时间结束后进行反抗，反抗成功则可解除奴隶关系，并获得[5分钟]的保护时间',
        //        '玩家只能有一个主人，但可以有多个奴隶，升级['+TecVO.getObject(3).name+']科技等级，可提升奴隶数量上限',
        //        '玩家也可自主选择释放自己的奴隶，腾出奴隶空位',
        //        '玩家可使用钻石增加自己/奴隶的保护/镇压时间，在该段时间内的玩家，不可被攻击/反抗',
        //        '成为主人后，可跟据奴隶的金币生产效率，获得其[20%]的金币产出收益，但最多只能积累[10小时]，并且收取间隔为[1小时]',
        //        '成为奴隶后，每小时要进贡一次金币，数量为每小时金币产出的[20%]',
        //        '奴隶在战役中可获得自身与主人[战力差]的[5%]的战力加成',
        //    ]
        //}
        //
        //
        //this.helpObj['hang'] = {
        //    title:'战役系统',
        //    list:[
        //        '玩家可从战役中[获取收益]，收益的数量/物品类型会随着通过战役的推进而获得提高',
        //        '战役中主要掉落内容为：金币、资源及各种道具，升级对应的资源科技可使获取资源的效率获得[更大]提升',
        //        '战役累积奖励上限为[10小时]，超过时间则会停止累积',
        //        '通过战役后会有冷却时间，冷却时间结束后才能继续挑战下一关',
        //        '当战役关数大于[5]时，开启自动挑战模式，玩家可使用防御阵容进行挑战',
        //        '战役每10关为一特殊关卡，需在指定时间内取胜才算通关',
        //        '由于战役难度逐渐提高，升级[战力科技]提升玩家战力有助于玩家更快通关'
        //    ]
        //}
        //
        //this.helpObj['card'] = {
        //    title:'卡牌系统',
        //    list:[
        //        '卡牌分为[随从]和[法术]两种',
        //        '上阵[随从]卡牌后，系统会按卡牌属性派出对应士兵冲向敌人，如果能[冲破]对方出生点，则会对敌方的队伍生命造成伤害',
        //        '上阵[法术]卡牌后，系统会释放一次对应法术，法术效果由卡牌属性决定',
        //        '需要注意的是，只有通过手牌上阵的随从才能对敌方队伍生命造成伤害，通过技能[召唤]出现的随从是具有持续时间且不能伤害敌方队伍生命的',
        //        '[随从]卡牌类型分为：'+PKConfig.TYPENAME[1] + '、'+PKConfig.TYPENAME[2] + '、'+PKConfig.TYPENAME[3] +'，随从间克制关系为：' + PKConfig.TYPENAME[1] + '->'+PKConfig.TYPENAME[2] + '->'+PKConfig.TYPENAME[3]+ '->'+PKConfig.TYPENAME[1] ,
        //        '[法术]卡牌分为：'+PKConfig.SKILLTYPENAME[1] + '、'+PKConfig.SKILLTYPENAME[2] + '、'+PKConfig.SKILLTYPENAME[3]+ '、'+PKConfig.SKILLTYPENAME[4]+ '、'+PKConfig.SKILLTYPENAME[5],
        //        '所有卡牌都需要[能量]才能上阵，不同卡牌需要的能量值会不一样',
        //        '随着科技等级的提升，会出现更多未解锁的[随从]卡牌，投入指定的数量的金币即可解锁该卡牌',
        //        '[法术]卡牌可通过购买或兑换获得，当集满数量为[' + CardManager.getInstance().maxSkill + ']的卡牌后，玩家可[永久保有]该卡牌',
        //        '如果[法术]卡牌没有集满指定数量，玩家也可以将其放入手牌，但战斗会[产生损耗]',
        //        '出战后如果战斗取得[胜利]，就会返还未使用过的[法术]卡牌；但如果战斗[失败]，则会[移除]本轮出战的[所有法术]卡牌',
        //        //'玩家可对自己所拥有的卡牌进行投票（加强/削弱），最终投票结果会作为该卡牌的强度调整的依据。每个玩家每天最多可对[10张]卡牌进行投票',
        //        '[费用：]上阵该卡牌需要的能量',
        //        '[传送次数：][随从]卡牌在战斗中的出兵次数，达到数量后卡牌失效并移出',
        //        '[传送间隔：][随从]卡牌的出兵间隔',
        //        '[持续时间：][法术]卡牌的技能持续时间',
        //        '[施法间隔：][法术]卡牌触发多次时的触发时间间隔',
        //        '[血量：]出战士兵的属性，当血量降为为0时，该随从[死亡]',
        //        '[防御：]出战士兵的属性，能减少每次敌方士兵对其攻击造成的伤害',
        //        '[移动速度：]出战士兵的属性，数值越大，移动越快',
        //        '[伤害：]出战士兵的属性，冲破对方出生点后对敌方[队伍生命]造成的伤害值，如果对方[队伍生命]生命降为[0]，则取得战斗胜利',
        //        '[攻击力：]出战士兵的属性，数值越大，对敌方士兵的伤害越大',
        //        '[攻击间隔：]出战士兵的属性，每次攻击的出手间隔时间',
        //        '[攻击距离：]出战士兵的属性，攻击发出时与敌人的最大距离',
        //        '[需要人口：]出战士兵的属性，当战场中已方的总人口数量大于等于' + PKConfig.maxMonsterSpace + '时，上阵卡牌暂停出兵,但法术卡牌不受此影响',
        //        '[技能间隔：]出战士兵的属性，士兵所拥有技能的触发时间间隔',
        //    ]
        //}
        //
        //this.helpObj['pk'] = {
        //    title:'对战说明',
        //    list:[
        //        '战斗界面由上往下分别为[对方出牌记录区]，[战场]，我的[出战区]，我的[手牌区]',
        //        '战斗的过程一般为：从[手牌]选择合适的卡牌->将其拖入[出战区]-> [出战区]的卡牌生效后出现在[战场]-> [战场]中的随从冲过敌方出生点后造成伤害->当其中一方的生命被消耗为0时，游戏结束',
        //        //'注意，当进入战斗时，战场中部会出现[防御石]，所有攻击其的随从会为已方队伍获取1点防御积分，每满5点积分增加1点队伍防御。[防御石]被攻击满50次后消失，由此刻起双方短兵相接',
        //        '当战斗卡牌被放入[出战区]时，都有[3秒]的准备时间，准备时间过后，卡牌才会生效。',
        //        '当玩家的能量[大于等于18点且空场]时，系统会自动为玩家上阵一张[【'+SkillVO.getObject(501).name+'】]。其效果为：' + SkillVO.getObject(501).des,
        //        '当玩家空场并且无任何手牌时，系统会[自动]为玩家上阵一张[【'+SkillVO.getObject(502).name+'】]。其效果为：' + SkillVO.getObject(502).des,
        //        '玩家的队伍生命由'+TecVO.getObject(1).name+'决定，升级科技会获得提升'
        //    ]
        //}
        //
        //this.helpObj['force'] = {
        //    title:'战力说明',
        //    list:[
        //        '[战力]是玩家唯一要养成的卡牌属性，升级战力可提升[所有]卡牌的属性值',
        //        '每1点战力提升可加强随从[1%]的[攻击力]和[生命上限]',
        //        '如果[随从的技能]具有伤害或回血属性时，也会受到战力加成影响',
        //        '同理，[法术卡牌]的伤害或回血属性，也会受到战力的加成',
        //        '总的来说，加强战力会让所有卡牌能力得到同步提升',
        //    ]
        //}
        //
        //this.helpObj['tec'] = {
        //    title:'科技研究',
        //    list:[
        //        '玩家可通过科技研究提升自己的战力和资源生产效率',
        //        '科技研究需要耗费资源，不同的科技需求的资源种类各不相同，需求数量也会随着科技等级而提高',
        //        '进度条颜色中，[红色]表示离满足需求还[差]的比例，[绿色]表示升级资源占玩家当前所拥有资源的[百分比]',
        //        '[通用科技：]科技升级与其它非战力、资源类的科技',
        //        '[战力科技：]升级可提高玩家的总战力，直接影响所有士兵的属性',
        //        '[金币科技：]玩家每小时会自动获得金币，这里的科技等级越高获得金币也越多。',
        //        '[资源科技：]研究资源科技可增加玩家在战役中获得对应资源的数量',
        //    ]
        //}
        //
        //var activeBase = PKActiveManager.getInstance().base[1]
        //this.helpObj['fight'] = {
        //    title:activeBase.title + '说明',
        //    list:[
        //        '玩家进入远征前，需先从自己的卡库中选取一套卡组作为远征的基础卡组，其中携带的法术卡牌会在[进入时]算作已出战[消耗]',
        //        '进入远征后,每次战斗[都会消耗]玩家[战斗中]所使用的卡牌，无论是法术还是随从',
        //        '如果玩家战斗胜利，即可进入下一轮战斗，并可从[9张补充卡牌]中选择其中[5张]加入到你的远征卡组',
        //        '玩家可在任何时候消耗'+activeBase.diamond+'钻石补充[5张]手牌',
        //        '每次远征战斗，敌人的卡牌种类只会有[三种]，但可多次出战（可超过3张）',
        //        '在活动期间完成[12个]关卡，即可领取[最终大奖]',
        //    ]
        //}
        //
        //activeBase = PKActiveManager.getInstance().base[2]
        //this.helpObj['answer'] = {
        //    title:activeBase.title + '说明',
        //    list:[
        //        '每关系统会给出玩家[6张]固定手牌去挑战系统的布阵，挑战胜利即可通关',
        //        '所有关卡都[保证有解]，不会出现无解的关卡',
        //        '挑战时双方战力固定为[1000]，生命值固定为[3]，且卡牌[不受]玩家种族加成[影响]',
        //        '玩家初始有[5次]失败机会，全用完后可消耗['+activeBase.diamond+'钻石]再增加[5次]',
        //        '在活动期间完成[12个]关卡，即可领取[最终大奖]',
        //    ]
        //}
        //
        //activeBase = PKActiveManager.getInstance().base[3]
        //this.helpObj['random'] = {
        //    title:activeBase.title + '说明',
        //    list:[
        //        '玩家在进入挑战后会得到[6张]随机手牌，选择其中一张上阵后，会舍弃剩余手牌，并重新得到新的[6张]手牌',
        //        '挑战时玩家战力固定为[1000]，生命值固定为[3]',
        //        '玩家初始有[5次]失败机会，全用完后可消耗['+activeBase.diamond+'钻石]再增加[5次]',
        //        '在活动期间完成[12个]关卡，即可领取[最终大奖]',
        //    ]
        //}
        //
        //activeBase = PKActiveManager.getInstance().base[4]
        //this.helpObj['choosecard'] = {
        //    title:activeBase.title + '说明',
        //    list:[
        //        '开始挑战前，会先进入选卡环节。系统每次会给出3张卡牌，玩家须选择其中一张加入到自己的阵容中，直到手牌数量达到[20张]',
        //        '玩家会使用本次组好的阵容进行关卡挑战，中途不可更换，但可进行顺序调整',
        //        '挑战时玩家战力固定为[1000]，生命值固定为[3]',
        //        '玩家初始有[5次]失败机会，全用完后可消耗['+activeBase.diamond+'钻石]增加[5次],并重新组建新的阵容',
        //        '在活动期间完成[12个]关卡，即可领取[最终大奖]',
        //    ]
        //}
        //
        //activeBase = PKActiveManager.getInstance().base[5]
        //this.helpObj['endless'] = {
        //    title:activeBase.title + '说明',
        //    list:[
        //        '玩家用自己的进攻阵容和战力属性进行关卡挑战',
        //        '玩家无须战胜对手，只需[坚持指定时间]即可获得关卡胜利',
        //        '玩家的队伍生命只有[1点]',
        //        '玩家初始有[5次]失败机会，全用完后可消耗['+activeBase.diamond+'钻石]再增加[5次]',
        //        '在活动期间完成[12个]关卡，即可领取[最终大奖]',
        //    ]
        //}
        //
        //
        //this.helpObj['pvp'] = {
        //    title:'竞技场说明',
        //    list:[
        //        '竞技场的战斗模式分为[自动]和[手动]两种，但共享同一个竞技积分',
        //        '当玩家使用[防御阵容]进行对决，系统会跟据玩家的积分匹配玩家[镜像]进行PK',
        //        '当玩家使用[进攻阵容]进行对决，系统会匹配合适玩家进行[实时]对决',
        //        '在竞技场中，所有玩家的[战力]统一为[1000点]，但生命，卡牌等仍受玩家科技影响',
        //        '如果玩家在对战中取胜，可获得竞技积分奖励，积分达到一定值可进入下一阶段竞技场，如果战斗失败，则会扣除相应积分',
        //        '竞技场段位结算周期为[28]天，到达结算时间后，会根据玩家所在[段位]派发相应[奖励]',
        //        '在段位结算前[10分钟]，会[停止]所有竞技场对战',
        //        '竞技场中会有每日任务，完成任务要求可得宝箱奖励，[跨天]所有任务会[重置]',
        //        '在[防御阵容]对决中，如果玩家对战失败，可选择[继续挑战]直到胜利，但所有场次的对决仍受积分规则影响',
        //        '在竞技场中，英雄的出战品质有着上限，随着竞技场段位提高，可出战的英雄品质也会提高',
        //        PVPManager.getInstance().base[1].title + '竞技场(lv1) - '+PVPManager.getInstance().base[3].title+'竞技场(lv3)，英雄最高品质为 1星',
        //        PVPManager.getInstance().base[4].title + '竞技场(lv4) - '+PVPManager.getInstance().base[6].title+'竞技场(lv6)，英雄最高品质为 2星',
        //        PVPManager.getInstance().base[7].title + '竞技场(lv7) - '+PVPManager.getInstance().base[9].title+'竞技场(lv9)，英雄最高品质为 3星',
        //        PVPManager.getInstance().base[10].title + '竞技场(lv10) - '+PVPManager.getInstance().base[12].title+'竞技场(lv12)，英雄最高品质为 4星',
        //        PVPManager.getInstance().base[13].title + '竞技场(lv13)及以上，英雄最高品质为 5星',
        //    ]
        //}
        //
        //
        //this.helpObj['hero'] = {
        //    title:'英雄说明',
        //    list:[
        //        '英雄会在战斗中[自动]出战，无需玩家控制',
        //        '玩家需在布阵中配置出战的英雄，英雄会按顺序分别在第[40秒，80秒，120秒，160秒，200秒]准时到达战场',
        //        '每个英雄在每轮战斗中只会出战一次',
        //        '英雄受玩家战力影响，玩家战力越高，英雄属性越强',
        //        '玩家可收集英雄碎片进行升品，每升一品，可[解锁]一个新的英雄技能，最高可达[5品]',
        //        '英雄[不会]受到[即死类]技能的影响，如【虚空裂缝：'+SkillVO.getObject(249).getDes(1,false)+'】',
        //    ]
        //}




        this.helpObj['temp'] = {
            list:[
                '玩家的体力上限是'+UM.maxEnergy+',每['+30+'分钟]回复1点体力'
            ]
        }

        for(var s in this.helpObj)
        {
            var oo = this.helpObj[s];
            for(var ss in oo.list)
            {
                var text = oo.list[ss];
                this.infoList.push(text);
            }
        }

        //for(var i=0;i<this.helpObj['card'].list.length;i++)
        //{
        //    var str = this.helpObj['card'].list[i];
        //    if(str.indexOf('解锁') == -1 && str.indexOf('投票') == -1)
        //    {
        //        this.helpObj['pk'].list.push(str)
        //    }
        //}
    }




    public getInfoText(){
        var text = ArrayUtil.randomOne(this.infoList);
        return text.replace(/\[/g,'<font color="#E0A44A">').replace(/\]/g,'<\/font>')
    }

    public showHelp(key,fun?){
        //if(key == 'pvp')
        //{
        //    this.helpObj[key].list[0] = '本轮竞技场结算时间待定'
        //}
        HelpUI.getInstance().show(this.helpObj[key],fun);
    }



}